require 'yaml'
require 'rspec/core/rake_task'

require_relative 'app/main'

RSpec::Core::RakeTask.new(:spec) do |spec|
  spec.pattern = 'spec/**/*_spec.rb'
end

RSpec::Core::RakeTask.new(:coverage) do |spec|
  spec.pattern = 'spec/**/*_spec.rb'
end

task :run do
  exec("bundle exec thin start -p 9393 -V -D")
end

desc "Create a new user"
task :adduser, [:login, :space] do |t, user|
  app = RoundTable::API.new

  if user.has_key?(:login) and user.has_key?(:space)
    puts "New password: "
    password = STDIN.noecho(&:gets)

    user_json = {
      :password => BCrypt::Password.create(password),
      :space => user[:space]
    }.to_json

    app.helpers.redis.set("auth_user_#{user[:login]}", user_json)
    puts "User created successfully"
  else
    puts "Please provide login and space arguments"
  end
end

desc "Delete a user by login"
task :deluser, [:login] do |t, user|
  app = RoundTable::API.new
  app.helpers.redis.del("auth_user_#{user[:login]}")
  puts "User #{user[:login]} deleted successfully"
end

task :default => :run
